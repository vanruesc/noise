/**
 * noise v0.0.2 build Oct 26 2015
 * https://github.com/vanruesc/noise
 * Copyright 2015 Raoul van Rueschen, Zlib
 */
"use strict";function hslToRgb(t,i,h){function e(t,i,h){var e=t;return 0>h?h+=1:h>1&&(h-=1),1/6>h?e=t+6*(i-t)*h:.5>h?e=i:2/3>h&&(e=t+(i-t)*(2/3-h)*6),e}var s,r,a,o,n;return 0===i?s=r=a=h:(n=.5>h?h*(1+i):h+i-h*i,o=2*h-n,s=e(o,n,t+1/3),r=e(o,n,t),a=e(o,n,t-1/3)),[Math.round(255*s),Math.round(255*r),Math.round(255*a)]}function Noise(t,i){var h,e;for(this.width=void 0===t?0:t,this.height=void 0===i?0:i,this.noise=[],h=0;h<this.width;++h)for(this.noise.push(new Float32Array(this.height)),e=0;e<this.height;++e)this.noise[h][e]=Math.random();this.imageData=null}var Pattern=Object.freeze({CLOUDS:0,MARBLE:1,WOOD:2});Noise.prototype.smooth=function(t,i){var h=t-(0|t),e=i-(0|i),s=((0|t)+this.width)%this.width,r=((0|i)+this.height)%this.height,a=(s+this.width-1)%this.width,o=(r+this.height-1)%this.height,n=0;return n+=h*e*this.noise[s][r],n+=h*(1-e)*this.noise[s][o],n+=(1-h)*e*this.noise[a][r],n+=(1-h)*(1-e)*this.noise[a][o]},Noise.prototype.turbulence=function(t,i,h){for(var e=0,s=h;h>=1;)e+=this.smooth(t/h,i/h)*h,h/=2;return e/s},Noise.prototype.generate=function(t,i,h,e,s){var r,a,o,n,u,d,c,M,g,v,f=this.width,P=this.height,b=[0,0,0];for(void 0===t&&(t=Pattern.MARBLE),void 0===i&&(i=t===Pattern.MARBLE?5:.1),void 0===h&&(h=t===Pattern.CLOUDS?64:32),void 0===e&&(e=t===Pattern.MARBLE?5:12),void 0===s&&(s=10),r=this.imageData=new Uint8ClampedArray(f*P*4),u=4*f,a=0;f>a;++a)for(o=0;P>o;++o){switch(t){case Pattern.CLOUDS:d=.7529+.5*this.turbulence(a,o,h)/3,b=hslToRgb(.6627,1,d);break;case Pattern.MARBLE:c=a*e/P+o*s/f+128*i*this.turbulence(a,o,h)/256,v=256*Math.abs(Math.sin(c*Math.PI))|0,b[0]=v,b[1]=v,b[2]=v;break;case Pattern.WOOD:c=(o-P/2)/P,M=(a-f/2)/f,g=Math.sqrt(c*c+M*M)+128*i*this.turbulence(a,o,h)/256,v=128*Math.abs(Math.sin(e*g*Math.PI))|0,b[0]=80+v,b[1]=30+v,b[2]=30}n=o*u+4*a,r[n]=b[0],r[n+1]=b[1],r[n+2]=b[2],r[n+3]=255}return this.imageData},Noise.Pattern=Pattern,module.exports=Noise;